#--------------------- DB ----------------------
# DB Connection with the uri (host)
client: mongodb://localhost:27017/

# db name
db: aiot_db

# db collection
col: watch_data


#--------------------- Dataframe Instantiation ----------------------
# Dataframe columns list
order: ['x-acceleration', 'y-acceleration', 'z-acceleration'] # changed to the correct names
rename: ["acc_x", "acc_y", "acc_z"]


#--------------------- Dataset Local Storage ----------------------
# dataset location
data_path: data
# single data instance location path to experiment with the data engineering process and visualization
single_instance_path: data\class_A\data_A_01.csv


#--------------------- Data Engineering ----------------------
# sliding window algorithm parameters
sliding_window:
  ws: 100
  overlap: 50
  w_type: "hann"
  w_center: True
  print_stats: True

# window to handle for visualization purposes
x_number: 1

# filtering parameterization
filter:
  order: 1
  wn: 0.25
  type: "lowpass"


#--------------------- $ Data Preparation ----------------------
# Dimensionality reduction
PCA:
  n_comp: [2, 3]
  variance: 0.95


#--------------------- Learning ----------------------
# Classifier - Statistical
classifier:
  SVC:
    C: 0.01
    kernel: "linear"
    gamma: "scale"
    max_iter: -1
  RandomForest:
    n_estimators: 10
    max_depth: 10
    max_features: "log2"
    criterion: "gini"
    bootstrap: False
    n_jobs: -1
    random_state: 42


# Parameter Grid for Fine-tuning, for instance, a Grid Search classifier

# Support Vector Machine
fine_tune_svc:
  param_grid: [
    {'C': [1, 10, 100, 1000], 'kernel': ['linear']},
    {'C': [1, 10, 100, 1000], 'gamma': [0.001, 0.0001], 'kernel': ['rbf']},
   ]
  cv: 5
  verbose: 1
  scoring: 'accuracy'
  n_jobs: -1

# Random Forest
fine_tune_rf:
  param_grid:
      n_estimators: [10, 150, 300]
      max_depth: [10, 20, 30, null]
      max_features: ['log2', 'sqrt']
      criterion: ['gini', 'entropy']
      bootstrap: [True, False]
  cv: 5
  verbose: 1
  scoring: 'accuracy'
  n_jobs: -1
  error_score: 'raise'

# Classifier - Neural Network
fit:
  epochs: 100
  batch: 16
  verbose: "auto"